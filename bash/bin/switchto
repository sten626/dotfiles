#!/bin/bash

main() {
  local skip_install=false

  while getopts 'hs' flag; do
    case "$flag" in
      h) print_usage
         exit 0 ;;
      s) skip_install=true ;;
      *) print_usage
         exit 1 ;;
    esac
  done

  shift $((OPTIND-1))
  local target_branch="$1"

  if [[ -z $target_branch ]]; then
    print_usage
    exit 1
  fi

  # Update repo.

  printf "Updating git repo...\n\n"
  git fetch --prune --prune-tags

  # If input is just a number, try to match it to a branch.

  if [[ "$target_branch" =~ ^[0-9]+$ ]]; then
    if branch_exists "issue-$target_branch"; then
      target_branch="issue-$target_branch"
    elif [[ $(type -t switchto_findbranch) == function ]]; then
      target_branch="$(switchto_findbranch "$target_branch")"
    fi
  fi

  # Attempt to checkout the target branch, or return if it fails.

  printf "Checking out '%s'.\n\n" "$target_branch"
  git checkout "$target_branch" || return 1

  # Check if the branch is behind origin, and offer to pull.

  local rev_list_count
  rev_list_count="$(git rev-list --count --left-right "@{upstream}"...HEAD 2> /dev/null)"

  if [[ $rev_list_count != 0* ]] && [[ $rev_list_count == *"$(printf "\t0")" ]]; then
    read -r -n 1 -p "Branch is behind origin. Pull? [Y/n] "

    if [[ -z $REPLY ]] || [[ $REPLY == @(Y|y) ]]; then
      git pull
    fi
  fi

  # Check skip install flag.

  if ! $skip_install; then
    # First check for a custom install function.
    if [[ $(type -t switchto_install) == function ]]; then
      switchto_install
    # Check if it's a node project.
    elif [[ -e ./package.json ]]; then
      printf "\nInstalling node packages...\n\n"
      npm install
    # Check for a Makefile.
    elif [[ -e ./Makefile ]]; then
      printf "\nRunning make...\n\n"
      make
    fi
  fi
}

print_usage() {
  printf "Usage: %s [-hs] BRANCH | ISSUE_NUMBER\n" "$(basename "$0")"
  printf "Update git repository, check out given branch, and install.\n"
  printf "\n"
  printf "Options:\n"
  printf "  -h\tdisplay this message and exit\n"
  printf "  -s\tskip installation step\n"
  printf "\n"
  printf "Arguments:\n"
  printf "  BRANCH\tName of the branch to checkout\n"
  printf "  ISSUE_NUMBER\tIssue number for the wanted branch, will try to match\n"
  printf "\n"
}

main "$@"
