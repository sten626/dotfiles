# shellcheck shell=bash

# Check if a branch exists.

branch_exists() {
  if [[ $# -ne 1 ]]; then
    return 1
  fi

  readonly branch="$1"

  if git show-branch "$branch" &> /dev/null || git show-branch "remotes/origin/$branch" &> /dev/null; then
    return 0
  fi

  return 1
}

# Make a new directory and move into it.
mkd() {
  mkdir -p "$@" && cd "$_" || return 1
}

# Call `open` with the given args, or on pwd if none given.
o() {
  if [ $# -eq 0 ]; then
    open .
  else
    open "$@"
  fi
}

# Recursively replace all instances of a string in all files in PWD with another string.
replace_all() {
  local -r old="$1"
  local -r new="$2"

  grep --files-with-matches --recursive "$old" --exclude-dir=.git | xargs sed --in-place "s|$old|$new|g"
}

# Archive and compress a file or directory
targz() {
  local output="${*%/}.tar.gz"
  tar -cvzf "$output" "$@"
  local zipped_size=""
  zipped_size=$(stat -c %s "$output")

  echo "$output ($((zipped_size / 1000)) kB) created successfully."
}

untargz() {
  if [ $# -lt 2 ]; then
    tar -xvf "$1"
  else
    tar -xvf "$1" -C "$2"
  fi
}
